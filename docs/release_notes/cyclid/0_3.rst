**********
Cyclid 0.3
**********

.. contents::

Upgrading
=========

Refer to the standard instructions for :ref:`upgrading <upgrading>` from a
previous release of Cyclid.

v0.3.2
======

Highlights
----------

A small release, mostly intended to add some features required by the hosted
version of Cyclid.

Changes
-------

- Allow the job to specificy an instance size (E.g. 'small') and map this to a
  virtual machine type where it makes sense. Currently this is only supported
  by the Google Builder.
- Fix a database connection leak with the Local (Sidekiq based) Dispatcher; it
  will now ensure all database connections are "checked in" to the pool once
  the job has finished.

v0.3.1
======

Highlights
----------

This release adds support for Docker build hosts, allowing you to run your
Cyclid jobs in lightweight containers.

Also new is support for "Redhat-ish" build hosts, with support for Fedora,
CentOS & RHEL, including support for variations across different versions
(I.e yum, dnf & rpm).

Last but not least there are a pair of new Action plugins. The Simplecov
plugin reads a JSON coverage report generated by the Simplecov coverage tool,
and the Cobertura plugin reads an XML coverage report generated by the
Cobertura coverage tool, or any coverage tool that produces a Cobertura
compatible XML report.

Changes
-------

- Add the :ref:`Docker Builder <docker>` & DockerApi Transport plugins.
- Add Redhat-ish Provisioner plugins:

  - :ref:`Fedora <fedora>`, with support for both yum (Fedora 21 and older)
    and dnf (Fedora 22 and newer)
  - :ref:`CentOS <centos>`, with support for CentOS <5, 6 & 7+
  - :ref:`RHEL <rhel>` (Redhat Enterprise Linux), with support for
    RHEL <5, 6, 7+

- Add :ref:`Cobertura <cobertura-plugin>` & :ref:`Simplecov <simplecov-plugin>`
  Action plugins that can read test coverage reports.

v0.3.0
======

Highlights
----------

This is the first release with support for logic modifiers. The
implementation of Sequences has been fixed to work as documented, so you no
longer need to declare ``on_success`` handlers for every Stage. The Github API,
Debian & Ubuntu Provisioner plugins have all seen updates & bug fixes.

Changes
-------

- Add the ``only_if`` and ``not_if`` :ref:`modifiers <modifiers-info>`.
- Sequences now follow the documented behaviour: if no explicit ``on_success``
  handler is defined, the next stage in the sequence will run automatically
  (if the Stage succeeds)
- Pull Request events from forked Github repositories now work, and the logic
  for Github Pull Requests has been generally improved.
- Quietened & cleaned up the Debian & Ubuntu Provisioner output when running
  ``apt`` commands.
- All context variable interpolation is now "safe" and will not raise an error
  if the variable being interpolated does not exist.

Issues closed
-------------

#65 - Bash modulo (%) operator causes job to hang
